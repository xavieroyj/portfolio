---
/**
 * ThemeToggle component for TailwindCSS v4
 *
 * Note: For this to work with TailwindCSS v4, you need to add the following to your CSS file:
 * @custom-variant dark (&:where(.dark, .dark *));
 *
 * This sets up the dark variant to apply when the .dark class is present in the HTML tree.
 */
import { Sun, Moon } from "@lucide/astro";
---

<button
    type="button"
    class="group flex items-center gap-2 px-2 py-1 rounded-lg border border-gray-200 dark:border-gray-700 hover:border-purple-500 dark:hover:border-purple-500 transition-all"
    id="theme-selector"
    aria-label="Toggle theme"
>
    <Sun class="hidden dark:inline stroke-2 transition-colors w-4 h-4" />
    <Moon class="dark:hidden stroke-2 transition-colors w-4 h-4" />

    <span class="text-sm dark:hidden">Light</span>
    <span class="hidden dark:inline text-sm">Dark</span>
</button>

<script>
    const setToggleListener = () => {
        let toggleBtn = document.getElementById("theme-selector");
        const handleToggleClick = () => {
            const element = document.documentElement;
            element.classList.toggle("dark");

            const isDark = element.classList.contains("dark");
            localStorage.setItem("theme", isDark ? "dark" : "light");
        };

        toggleBtn?.addEventListener("click", handleToggleClick);
    };

    setToggleListener();

    document.addEventListener("astro:after-swap", setToggleListener);
</script>
