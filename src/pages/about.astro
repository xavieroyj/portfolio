---
import { Icon } from "astro-icon/components";
import GenericLayout from "../layouts/GenericLayout.astro";

const experiences = [
    {
        title: "NPU Physical Implementation Intern",
        company: "Mediatek",
        companyUrl: "https://www.mediatek.com/",
        period: "Sept 2024 - Present",
        location: "Singapore",
        summary:
            "Creating shell scripts that enhance the readability of report generated by the system",
        achievements: [
            "Assisted colleague in adding new fields to an existing script that generates report",
            "Created an easy interface to view report in HTML format with basic filtering",
            "Learnt the fundamental basics of designing a chip",
            "Understand basic shell scripting to run scripts"
        ],
        responsibilities: [
            "Assisted the team in turning report files into an easy to view format such as graphs and tables",
            "Debug existing scripts to find out why certain fields were not being displayed",
        ],
        tags: ["Bash", "CShell", "Python"],
    },
    {
        title: "Adhoc Software Developer",
        company: "OrangeKloud",
        companyUrl: "https://orangekloud.com/",
        period: "Sept 2023 - Oct 2023",
        location: "Remote",
        summary: "Converting Figma designs into React Bootstrap code",
        achievements: [
            "Successfully created pages that were identical to the Figma design and is currently used in production"
        ],
        responsibilities: [
            "Ensuring that the created interface in React Bootstrap were identical to the UI designed in Figma",
            "Creating CSS to override some Bootstrap styles to ensure that it fits company branding"
        ],
        tags: ["React", "Figma", "Bootstrap", "Jira"],
    },
    {
        title: "Software Developer Intern",
        company: "PSA Singapore",
        companyUrl: "https://www.singaporepsa.com/",
        period: "May 2019 - Aug 2019",
        location: "Singapore",
        summary: "Devising method of silent installation of software onto new devices. Created drag and drop application to handle camera placement UI",
        achievements: [
            "Modified the interface of the camera placement interface. Previously, the developer had to predict the placement of the camera by coordinates. The new flow makes it such that they just had to drag and drop to the desired position and press save",
            "Utilized powershell to silently install Win32 apps onto new devices"
        ],
        responsibilities: [
            "Investigating new methods to install software onto new devices in the background",
            "Using Javascript and HTML to visualize camera and editing of the camera position in the interface"
        ],
        tags: ["Win32API", "Javascript", "HTML"],
    },
];

const projects = [
    {
        title: "Personal Portfolio",
        description:
            "A personal portfolio website to showcase my projects and skills",
        features: [
            "Built with React and Tailwind CSS",
            "Includes a blog, contact form and a resume",
        ],
        sourceCodeUrl: "https://github.com/xavieroyj/portfolio",
        liveUrl: "https://xavieroyj.dev",
    },
    {
        title: "FlashLearn",
        description:
            "A web application that is AI-powered to help users with digesting large amount of data in bite-sized chunks",
        features: [
            "Utilizes the Vercel AI SDK to generate AI content",
            "Uses Gemini to generate AI content",
            "Drag and drop to upload files and turn them into flashcards",
            "Developed in Next.js"
        ],
        liveUrl: "https://flashlearn-nine.vercel.app/",
        sourceCodeUrl: "https://github.com/xavieroyj/flashlearn",
    },
    {
        title: "ShiftBus",
        description:
            "A service oriented bus charting service designed for the Singapore market",
        features: [
            "A bus chartering application that allows users to book buses for their trips.",
            "In production and used by multiple customers",
            "Developed in Next.js"
        ],
        liveUrl: "https://shiftbus.com/",
    },
    {
        title: "LabEquip Mobile Application",
        description:
            "Educational application that identifies lab equipment and displays the related information so that students are able to use lab equipment safely and correctly",
        features: [
            "Utilises the Pytorch framework to implement YOLOv8 object detection model to train and detect lab equipment in photographs.",
            "Responsive design",
            "Developed in Kotlin and uses room database to store data",
        ],
    },
    {
        title: "Tic-Tac-Toe",
        description:
            "A simple Tic-Tac-Toe game that allows users to play against each other and an option to play against the computer",
        features: [
            "Implemented minimax algorithm to allow the computer to play optimally",
            "Implemented GUI using Raylib",
            "Developed in C",
        ],
        sourceCodeUrl: "https://github.com/ryanchuaks1/CSC1103_ProgMeth",
    },
    {
        title: "2048-clone",
        description:
            "A clone of the 2048 game that allows users to play the game and see their high score",
        features: [
            "Simple and minimalistic design",
            "Mobile responsive",
            "Developed in Vanilla HTML, CSS, Javascript",
        ],
        liveUrl: "https://xavieroyj.github.io/2048-clone/",
        sourceCodeUrl: "https://github.com/xavieroyj/2048-clone",
    },
    {
        title: "StoryCrafter",
        description:
            "Mobile application that provides interactive learning experience for kids from underprivileged backgrounds",
        features: [
            "Game features for kids to learn languages through a gamification approach",
            "Uses text to speech to speak out the words where users can repeat and write the words down",
            "Uses speech to text to allow the kids to speak out the words and the app will provide feedback",
            "Nominated for VMware Tanzu Award",
            "Developed in Kotlin",
        ],
    },
];

const skills = [
    "HTML",
    "CSS",
    "JavaScript",
    "Tailwind",
    "TypeScript",
    "Node",
    "MySQL",
    "Git",
    "GitHub",
    "Next.js",
    "React",
];

const education = [
    {
        institution: "Singapore Institute of Technology / University of Glasgow",
        degree: "BSc (Hons) in Computing Science",
        period: "2022 - 2025",
    },
    {
        institution: "Nanyang Polytechnic",
        degree: "Diploma in Infocomm & Security, Information Technology",
        period: "2017 - 2020",
    },
    {
        institution: "Bukit Panjang Government High School",
        degree: "Middle School",
        period: "2012 - 2017",
    },
];

const certificates = [
    {
        title: "AWS Academy Cloud Foundations",
        institution: "Amazon Web Services",
        year: "2024",
    },
    {
        title: "AWS Academy Cloud Architecting",
        institution: "Amazon Web Services",
        year: "2024",
    },
    {
        title: "Azure Fundamentals AZ900",
        institution: "Amazon Web Services",
        year: "2024",
    },
];

const personalInfo = {
    name: "Xavier Ong",
    title: "Junior Full Stack Developer",
    description: "I'm a passionate developer who loves to build things with code. I'm currently working as a NPU physical implementation intern at Mediatek, where I'm building Linux scripts to enhance the readability of reports generated by the system",
    location: "Singapore",
    email: "hello@xavieroyj.dev",
    linkedin: "https://www.linkedin.com/in/xavieroyj/",
    github: "https://github.com/xavieroyj",
}
---

<script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>

<GenericLayout title="About">
    <!-- Web Layout -->
    <div class="flex justify-center print:hidden">
        <main class="relative grid max-w-7xl gap-12 p-8 max-sm:py-16 md:grid-cols-6 md:p-16 xl:gap-24">
            <!-- Left Column -->
            <div class="md:col-span-2">
                <!-- Profile Section -->
                <div class="flex flex-col gap-4">
                    <img
                        src="/profile.png"
                        alt="Profile"
                        class="h-48 w-48 rounded-full border-2 border-purple-500"
                    />
                    <h1 class="text-2xl font-bold dark:text-gray-200">{personalInfo.name}</h1>
                    <p class="text-gray-600 dark:text-gray-400">{personalInfo.title}</p>
                    <p class="text-gray-600 dark:text-gray-400 flex items-center gap-1">
                        <Icon name="globe" class="w-4 h-4" />
                        {personalInfo.location}
                    </p>

                    <!-- Social Links - Horizontal Layout -->
                    <div class="flex gap-3 items-center">
                        <a href="https://github.com/xavieroyj" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                            <Icon name="github" size="24" />
                        </a>
                        <a href="https://www.linkedin.com/in/xavieroyj" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                            <Icon name="linkedin" size="24" />
                        </a>
                        <a href="https://x.com/xavieroyj" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                            <Icon name="x" size="24" />
                        </a>
                    </div>

                    <!-- Download Resume -->
                    <div>
                        <a href="/resume.pdf" download>
                            <div class="inline-flex gap-1 items-center bg-purple-500 text-white px-2 py-1 rounded-lg">
                                <Icon name="file-user"/>
                                Download my resume
                            </div>
                        </a>
                    </div>
                </div>

                <!-- About Section -->
                <div class="mt-8">
                    <h2 class="text-xl font-bold dark:text-white">About</h2>
                    <p class="mt-2 text-gray-600 dark:text-gray-400">
                        {personalInfo.description}
                    </p>
                </div>
            </div>

            <!-- Right Column -->
            <div class="md:col-span-4 space-y-12">
                <!-- Experience Section -->
                <section>
                    <h2 class="text-2xl font-bold mb-8 dark:text-white">Experience</h2>
                    <div class="space-y-12">
                        {
                            experiences.map((exp) => (
                                <div x-data="{ expanded: false }" class="space-y-4">
                                    <div class="mb-3">
                                        <div class="flex justify-between items-start gap-4">
                                            <div class="min-w-0">
                                                <h3 class="font-semibold whitespace-normal">
                                                    {exp.title} @ <a href={exp.companyUrl} target="_blank"><span class="text-purple-500 hover:underline hover:cursor-pointer">{exp.company}</span></a>
                                                </h3>
                                                <p class="text-gray-500">{exp.location}</p>
                                            </div>
                                            <span class="text-gray-500 whitespace-nowrap flex-shrink-0">{exp.period}</span>
                                        </div>
                                    </div>

                                    <div class="relative">
                                        <div class="space-y-4">
                                            <div class="space-y-2">
                                                <h4 class="text-sm font-medium text-gray-900 dark:text-gray-200/90">Summary:</h4>
                                                <ul class="space-y-1 pl-4">
                                                    <li class="text-gray-600 dark:text-gray-300/90 text-sm before:content-['•'] before:text-purple-500 dark:before:text-purple-400 before:mr-2">
                                                        {exp.summary}
                                                    </li>
                                                </ul>
                                            </div>

                                            <div class="space-y-2">
                                                <h4 class="text-sm font-medium text-gray-900 dark:text-gray-200/90">Responsibilities:</h4>
                                                <ul class="space-y-1 pl-4">
                                                    {exp.responsibilities.map((item) => (
                                                        <li class="text-gray-600 dark:text-gray-300/90 text-sm before:content-['•'] before:text-purple-500 dark:before:text-purple-400 before:mr-2">
                                                            {item}
                                                        </li>
                                                    ))}
                                                </ul>
                                            </div>

                                            <div class="space-y-2" x-show="expanded">
                                                <h4 class="text-sm font-medium text-gray-900 dark:text-gray-200/90">Achievements:</h4>
                                                <ul class="space-y-1 pl-4">
                                                    {exp.achievements?.map((item) => (
                                                        <li class="text-gray-600 dark:text-gray-300/90 text-sm before:content-['•'] before:text-purple-500 dark:before:text-purple-400 before:mr-2">
                                                            {item}
                                                        </li>
                                                    ))}
                                                </ul>
                                            </div>
                                        </div>

                                        <!-- Gradient overlay that only shows when not expanded -->
                                        <div 
                                            x-show="!expanded" 
                                            class="absolute bottom-0 left-0 right-0 h-10 bg-gradient-to-t from-white via-white/80 to-transparent dark:from-[#000000] dark:via-[#000000]/95 dark:to-transparent"
                                        ></div>

                                        <!-- Container that controls the height -->
                                        <div 
                                            x-show="!expanded" 
                                            class="absolute inset-0 max-h-32"
                                        ></div>
                                    </div>

                                    <button 
                                        @click="expanded = !expanded" 
                                        class="text-sm text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 flex items-center gap-1"
                                    >
                                        <span x-text="expanded ? 'Show less' : 'Show more'"></span>
                                        <svg 
                                            class="w-4 h-4 transition-transform"
                                            :class="{ 'rotate-180': expanded }"
                                            viewBox="0 0 20 20" 
                                            fill="currentColor"
                                        >
                                            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                                        </svg>
                                    </button>

                                    <div class="flex flex-wrap gap-2">
                                        {exp.tags.map((tag) => (
                                            <span class="px-3 py-1 bg-purple-50 dark:bg-purple-900 text-purple-500 dark:text-white rounded-full text-xs">
                                                {tag}
                                            </span>
                                        ))}
                                    </div>
                                </div>
                            ))
                        }
                    </div>
                </section>

                <!-- Projects Section -->
                <section class="print:hidden" id="projects">
                    <h2 class="text-2xl font-bold mb-8 dark:text-white">Projects</h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        {
                            projects.map((project) => (
                                <div class="flex flex-col h-full border dark:border-gray-700 rounded-lg p-6 dark:bg-gray-800/50 hover:border-purple-500 dark:hover:border-purple-500 transition-colors">
                                    <div class="flex justify-between items-start mb-4">
                                        <div class="flex items-center gap-2">
                                            <Icon name="square-chart-gantt" class="w-6 h-6 text-purple-500" />
                                            <h3 class="font-semibold dark:text-white">
                                                {project.title}
                                            </h3>
                                        </div>

                                        <div class="flex gap-3">
                                            {project.sourceCodeUrl && (
                                                <a 
                                                    href={project.sourceCodeUrl} 
                                                    target="_blank" 
                                                    class="text-gray-500 hover:text-purple-500 transition-colors"
                                                    aria-label="View source code"
                                                >
                                                    <Icon name="github" class="w-5 h-5" />
                                                </a>
                                            )}

                                            {project.liveUrl && (
                                                <a 
                                                    href={project.liveUrl} 
                                                    target="_blank" 
                                                    class="text-gray-500 hover:text-purple-500 transition-colors"
                                                    aria-label="View live demo"
                                                >
                                                    <Icon name="square-arrow-out-up-right" class="w-5 h-5" />
                                                </a>
                                            )}
                                        </div>
                                    </div>

                                    <p class="text-gray-600 dark:text-gray-300 mb-4 font-semibold text-sm">
                                        {project.description}
                                    </p>

                                    <ul class="space-y-2 text-gray-500/90 dark:text-gray-500 text-sm">
                                        {project.features.map((feature) => (
                                            <li class="flex items-center gap-2">
                                                <span class="w-1 h-1 rounded-full bg-purple-500"></span>
                                                {feature}
                                            </li>
                                        ))}
                                    </ul>
                                </div>
                            ))
                        }
                    </div>
                </section>

                <!-- Skills Section -->
                <section class="print:hidden">
                    <h2 class="text-2xl font-bold mb-6 dark:text-white">Skills</h2>
                    <div class="flex flex-wrap gap-3">
                        {
                            skills.map((skill) => (
                                <span class="px-3 py-1 bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 rounded-full text-sm">
                                    {skill}
                                </span>
                            ))
                        }
                    </div>
                </section>

                <!-- Education Section -->
                <section class="print:hidden">
                    <h2 class="text-2xl font-bold mb-6 dark:text-white">Education</h2>
                    <div class="space-y-4">
                        {
                            education.map((edu) => (
                                <div class="flex justify-between">
                                    <div>
                                        <h3 class="font-semibold dark:text-white">
                                            {edu.institution}
                                        </h3>
                                        <p class="text-gray-500 dark:text-gray-400">{edu.degree}</p>
                                    </div>
                                    <span class="text-gray-500 dark:text-gray-400">{edu.period}</span>
                                </div>
                            ))
                        }
                    </div>

                    <!-- Certificates -->
                    <div class="mt-8">
                        <h3 class="text-xl font-bold mb-4 dark:text-white">Certificates</h3>
                        <div class="space-y-4">
                        {
                            certificates.map((cert) => (
                                <div class="flex justify-between">
                                    <div>
                                        <h4 class="font-semibold dark:text-white">
                                            {cert.title}
                                        </h4>
                                        <p class="text-gray-500 dark:text-gray-400">
                                            {cert.institution}
                                        </p>
                                    </div>
                                    <span class="text-gray-500 dark:text-gray-400">{cert.year}</span>
                                </div>
                            ))
                        }
                        </div>
                    </div>
                </section>
            </div>
        </main>
    </div>

    <!-- Print Layout -->
    <div class="hidden print:block max-w-4xl mx-auto p-8">
        <!-- Header -->
        <div class="mb-8">
            <h1 class="text-4xl font-bold mb-1">{personalInfo.name}</h1>
            <p class="text-xl mb-2">{personalInfo.title}</p>
            <div class="flex items-center gap-6 text-gray-600">
                <div class="flex items-center gap-2">
                    <Icon name="globe" class="w-4 h-4" />
                    <span>{personalInfo.location}</span>
                </div>
                <span>{personalInfo.email}</span>
                <span>{personalInfo.linkedin}</span>
                <span>{personalInfo.github}</span>
            </div>
        </div>

        <!-- About -->
        <div class="mb-8">
            <h2 class="text-2xl font-bold mb-2">About</h2>
            <p class="text-gray-600">
                {personalInfo.description}
            </p>
        </div>

        <!-- Two Column Layout for Education and Experience -->
        <div class="grid grid-cols-3 gap-12">
            <!-- Left Column -->
            <div class="space-y-8">
                <!-- Education -->
                <section>
                    <h2 class="text-2xl font-bold mb-4">Education</h2>
                    <div class="space-y-4">
                        {education.map((edu) => (
                            <div>
                                <h3 class="font-semibold">{edu.institution}</h3>
                                <p class="text-gray-600">{edu.degree}</p>
                                <p class="text-gray-500">{edu.period}</p>
                            </div>
                        ))}
                    </div>
                </section>

                <!-- Certificates -->
                <section>
                    <h2 class="text-2xl font-bold mb-4">Certificates</h2>
                    <div class="space-y-4">
                        {certificates.map((cert) => (
                            <div>
                                <h3 class="font-semibold">{cert.title}</h3>
                                <p class="text-gray-600">{cert.institution}</p>
                                <p class="text-gray-500">{cert.year}</p>
                            </div>
                        ))}
                    </div>
                </section>

                <!-- Skills -->
                <section>
                    <h2 class="text-2xl font-bold mb-4">Skills</h2>
                    <div class="space-y-0.5">
                        {skills.map((skill) => (
                            <div class="text-gray-600">{skill}</div>
                        ))}
                    </div>
                </section>
            </div>

            <!-- Right Column - Experience -->
            <div class="col-span-2">
                <h2 class="text-2xl font-bold mb-6">Experience</h2>
                <div class="space-y-8">
                    {experiences.map((exp) => (
                        <div>
                            <div class="mb-3">
                                <div class="flex justify-between items-start gap-4">
                                    <div class="min-w-0">
                                        <h3 class="font-semibold whitespace-normal">
                                            {exp.title} @ <span class="text-purple-500">{exp.company}</span>
                                        </h3>
                                        <p class="text-gray-500">{exp.location}</p>
                                    </div>
                                    <span class="text-gray-500 whitespace-nowrap flex-shrink-0">{exp.period}</span>
                                </div>
                            </div>

                            {exp.summary && (
                                <div class="mb-3">
                                    <h4 class="font-medium mb-1">Summary:</h4>
                                    <p class="text-gray-600">{exp.summary}</p>
                                </div>
                            )}

                            {exp.responsibilities && exp.responsibilities.length > 0 && (
                                <div class="mb-3">
                                    <h4 class="font-medium mb-1">Responsibilities:</h4>
                                    <ul class="list-disc ml-4 text-gray-600 space-y-1">
                                        {exp.responsibilities.map((item) => (
                                            <li>{item}</li>
                                        ))}
                                    </ul>
                                </div>
                            )}

                            {exp.achievements && exp.achievements.length > 0 && (
                                <div class="mb-3">
                                    <h4 class="font-medium mb-1">Achievements:</h4>
                                    <ul class="list-disc ml-4 text-gray-600 space-y-1">
                                        {exp.achievements.map((item) => (
                                            <li>{item}</li>
                                        ))}
                                    </ul>
                                </div>
                            )}
                        </div>
                    ))}
                </div>
            </div>
        </div>
    </div>
</GenericLayout>
